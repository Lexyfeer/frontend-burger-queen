{"version":3,"sources":["assets/images/logo.png","components/NavbarProfile.js","components/Register.js","components/ShowOrders.js","components/MakeOrders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavbarProfile","react_default","a","createElement","react","Navbar","variant","expand","fixed","Brand","react_router_dom","to","className","src","Logo","alt","Toggle","aria-controls","Collapse","id","Nav","Item","exact","Component","Login","props","title","for","type","name","placeholder","required","value","ShowOrders","MakeOrders","App","NavbarProfile_NavbarProfile","react_router","path","component","Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.681a6a8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c822dbb8.png\";","import React, { Component, Fragment } from \"react\";\nimport Logo from '../assets/images/logo.png';\nimport { NavLink, Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\n\n\nexport default class NavbarProfile extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Navbar variant=\"dark\" expand=\"lg\" fixed=\"top\">\n          <Navbar.Brand>\n            <Link to=\"/\">\n              <img className=\"App-logo-image\" src={Logo} alt=\"logo\" />\n            </Link>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n            <Nav.Item>\n                <NavLink className=\"navMenuLink\" exact to=\"/\">\n                  <h6>Iniciar sesión</h6>\n                </NavLink>\n              </Nav.Item>\n              <Nav.Item>\n                <NavLink className=\"navMenuLink\" exact to=\"/MakeOrders\">\n                  <h6>Tomar orden</h6>\n                </NavLink>\n              </Nav.Item>\n              <Nav.Item>\n                <NavLink className=\"navMenuLink\" to=\"/ShowOrders\">\n                  <h6>Ver pedidos</h6>\n                </NavLink>\n              </Nav.Item>\n\n              <Nav.Item>\n                <NavLink className=\"navMenuLink\" to=\"/LogOut\">\n                  <h6>Cerrar sesión</h6>\n                </NavLink>\n              </Nav.Item>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nconst Login = (props) => (\n    <div className=\"mainContent\">\n        <div className=\"container\">\n            <h2>{props.title}</h2>\n            <h3>Iniciar sesion</h3>\n            <div className=\"LoginImage\">\n                <div >\n            <form className=\"form\">\n                <label for=\"nya\">Nombre y Apellido: *</label>\n                <br />\n                <input className=\"form-control\" type=\"text\" name=\"nya\" id=\"nya\" placeholder=\"Nancy Rodriguez\" required />\n                <br /><br />\n                <label for=\"email\">Email: *</label>\n                <br />\n                <input className=\"form-control\" type=\"text\" name=\"email\" id=\"email\" placeholder=\"ejemplo@hotmail.com\" required />\n                <br /><br />\n                <label for=\"password\">Contraseña:</label>\n                <br/>\n                <input className=\"form-control\" type=\"password\" name=\"contraseña\" id=\"contraseña\" required />\n                <br /><br />\n                <input className=\"btn\" type=\"submit\" value=\"Enviar\" />\n            </form>\n            </div>\n            </div>\n        </div>\n    </div>\n); \n\nexport default Login;","import React, { Component } from 'react';\n\nclass ShowOrders extends Component {\n    render() {\n            return(\n                <div>\n                    <p>Componente de Mostrar ordenes</p>\n                    \n                    \n                </div>\n            )\n        }\n    }\n\nexport default ShowOrders;","import React, { Component } from 'react';\n\nclass MakeOrders extends Component {\n    render() {\n            return(\n                <div>\n                    <p>Componente para tomar ordenes</p>\n                    \n                    \n                </div>\n            )\n        }\n    }\n\nexport default MakeOrders;","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.css';\n\nimport NavbarProfile from './components/NavbarProfile';\nimport Register from './components/Register';\nimport ShowOrders from './components/ShowOrders';\nimport MakeOrders from './components/MakeOrders';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <NavbarProfile />\n        <Route exact path=\"/\" component={Register} />\n        <Route path=\"/ShowOrders\" component={ShowOrders} />\n        <Route path=\"/MakeOrders\" component={MakeOrders} />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}