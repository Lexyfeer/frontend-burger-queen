{"version":3,"sources":["assets/images/logo.png","components/Login.js","components/ShowOrders.js","components/MakeOrders.js","components/employees/employees-component.js","services/employeeService.js","components/employees/employees-container.js","components/employees/register-component.js","services/employee.js","domain/employeeFactory.js","components/employees/register-container.js","components/NavbarProfile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","react_default","a","createElement","Component","ShowOrders","MakeOrders","TableEmployees","props","className","defaultData","title","URL","headers","Headers","append","employeeService","fetch","method","then","response","json","data","console","log","catch","error","newEmp","body","JSON","stringify","EmployeeContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","allEmployees","_this2","setState","map","value","index","key","Name","Email","react","employees_component","_renderAllUsers","Register","style","border","htmlFor","id","name","type","placeholder","onChange","controlFuncName","required","email","controlFuncEmail","emailcopy","controlFuncCopyEmail","pass","controlFuncPass","passcopy","controlFuncCopyPass","typeEmployee","controlFuncTypeEmployee","titleCombo","optionsCombo","optionValue","onClick","clearForm","Employee","TypeEmployee","Pass","employeeFactory","createEmployee","toUpperCase","alert","RegisterContainer","handleFullNameChange","e","target","handleFullEmailChange","handleFullEmailCopyChange","handleFullPassChange","handleFullPassCopyChange","handleTypeEmployeeSelect","handleClearForm","preventDefault","handleFormSubmit","allDataInputs","onSubmit","autoComplete","register_component","NavbarProfile","Navbar","variant","expand","fixed","Brand","react_router_dom","to","src","Logo","alt","Toggle","aria-controls","Collapse","Nav","Item","exact","react_router","path","component","App","NavbarProfile_NavbarProfile","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gSCczBC,mLAVH,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wCAJAC,aCYLC,mLAVH,OACIJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kDAJKC,aCYVE,mLAVH,OACIL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kDAJKC,aCoCVG,EApCQ,SAACC,GAAD,OACnBP,EAAAC,EAAAC,cAAA,OAAKM,UAAU,eACXR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,aACXR,EAAAC,EAAAC,cAAA,UAAKK,EAAME,YAAYC,UCL7BC,EAAM,+BAENC,EAAU,IAAIC,QACpBD,EAAQE,OAAO,eAAgB,oBAE/B,IAmEaC,EAnEE,kBACbC,MAAML,EAAI,aAAc,CACtBM,OAAQ,MACRL,YAEDM,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAEJ,OADAC,QAAQC,IAAI,kDAAmDF,GACxDA,IAERG,MAAM,SAAAC,GAAK,OAAIH,QAAQG,MAAM,SAAUA,MAyD7BV,EAtDE,SAACW,GACdV,MAAML,EAAI,aAAc,CACtBM,OAAQ,OACRL,UACAe,KAAOC,KAAKC,UAAUH,KAEvBR,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAEJ,OADAC,QAAQC,IAAI,0CAA2CF,GAChDA,IAERG,MAAM,SAAAC,GAAK,OAAIH,QAAQG,MAAM,SAAUA,MCoB3BK,cA1CX,SAAAA,EAAYvB,GAAO,IAAAwB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM3B,KACD+B,MAAQ,CACTC,aAAc,GACd7B,MAAO,6CAJIqB,mFAQC,IAAAS,EAAAN,KAChBnB,IAAyBG,KACrB,SAAAE,GACIoB,EAAKC,SAAS,CAAEF,aAAenB,IAC/BE,QAAQC,IAAI,uBAAwBiB,EAAKF,MAAMC,0DAOvD,OADYL,KAAKI,MAAMC,aACTG,IAAI,SAACC,EAAOC,GACtB,OACI5C,EAAAC,EAAAC,cAAA,MAAI2C,IAAKD,GACL5C,EAAAC,EAAAC,cAAA,oBAAYyC,EAAMG,MAClB9C,EAAAC,EAAAC,cAAA,qBAAayC,EAAMI,MAAnB,yCAOZ,OADAzB,QAAQC,IAAI,YAAaW,KAAKI,MAAMC,cAEhCvC,EAAAC,EAAAC,cAAC8C,EAAA,SAAD,KACIhD,EAAAC,EAAAC,cAAC+C,EAAD,CACIxC,YAAayB,KAAKI,QAEtBtC,EAAAC,EAAAC,cAAA,WACKgC,KAAKgB,2BArCM/C,aCgFjBgD,EApFE,SAAC5C,GAAD,OACbP,EAAAC,EAAAC,cAAA,OAAKM,UAAU,eACXR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,aACXR,EAAAC,EAAAC,cAAA,UAAKK,EAAME,YAAYC,OACvBV,EAAAC,EAAAC,cAAA,OAAKM,UAAU,cACfR,EAAAC,EAAAC,cAAA,OAAKkD,MAAO,CAACC,OAAQ,qBACjBrD,EAAAC,EAAAC,cAAA,SAAOoD,QAAQ,OAAf,wBACAtD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIM,UAAU,eAAe+C,GAAG,OAAOC,KAAK,OACxCC,KAAK,OACLC,YAAc,kBACdf,MAAQpC,EAAME,YAAY+C,KAC1BG,SAAUpD,EAAMqD,gBAChBC,UAAQ,IAEZ7D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOoD,QAAQ,SAAf,YACAtD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIM,UAAU,eAAe+C,GAAG,QAAQC,KAAK,QACzCC,KAAK,OACLC,YAAc,mBACdf,MAAOpC,EAAME,YAAYqD,MACzBH,SAAUpD,EAAMwD,iBAChBF,UAAQ,IAEZ7D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIM,UAAU,eAAe+C,GAAG,YAAYC,KAAK,YAC7CC,KAAK,OACLC,YAAc,mBACdf,MAAOpC,EAAME,YAAYuD,UACzBL,SAAUpD,EAAM0D,qBAChBJ,UAAQ,IAEZ7D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOoD,QAAQ,YAAf,kBACAtD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIM,UAAU,eAAe+C,GAAG,OAAOC,KAAK,OACxCC,KAAK,WACLd,MAAOpC,EAAME,YAAYyD,KACzBP,SAAUpD,EAAM4D,gBAChBN,UAAQ,IAEZ7D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIM,UAAU,eAAe+C,GAAG,WAAWC,KAAK,WAC5CC,KAAK,WACLd,MAAOpC,EAAME,YAAY2D,SACzBT,SAAUpD,EAAM8D,oBAChBR,UAAQ,IAEZ7D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKM,UAAU,cACXR,EAAAC,EAAAC,cAAA,SAAOoD,QAAQ,QAAf,qBACAtD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACAqD,GAAG,YACHC,KAAK,YACLb,MAAOpC,EAAME,YAAY6D,aAEzBX,SAAUpD,EAAMgE,wBAChB/D,UAAU,eACVR,EAAAC,EAAAC,cAAA,UAAQyC,MAAM,IAAIpC,EAAME,YAAY+D,YACnCjE,EAAME,YAAYgE,aAAa/B,IAAI,SAACgC,EAAa9B,GAC9C,OACI5C,EAAAC,EAAAC,cAAA,UACI2C,IAAKD,EACLD,MAAO+B,GAAcA,OAKrC1E,EAAAC,EAAAC,cAAA,SAAOM,UAAU,MAAMiD,KAAK,SAASd,MAAM,WAC3C3C,EAAAC,EAAAC,cAAA,UAAQM,UAAU,0BACVmE,QAASpE,EAAMqE,WADvB,sBC9EHC,EACT,SAAAA,EAAYP,EAAcd,EAAMM,EAAOI,GAAMlC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2C,GACzC3C,KAAK4C,aAAeR,EACpBpC,KAAKY,KAAOU,EACZtB,KAAKa,MAAQe,EACb5B,KAAK6C,KAAOb,GCgBPc,EAAkB,CAC7BC,eAnB4B,SAACtC,GAC7B,IAAIjB,EAAS,IAAImD,EAEdlC,EAAMuB,OAASvB,EAAMyB,UACtBzB,EAAMmB,QAAUnB,EAAMqB,WACpBtC,EAAOoD,aAAenC,EAAM2B,aAC5B5C,EAAOoB,KAAQH,EAAMa,KAAM0B,cAC3BxD,EAAOqD,KAAOpC,EAAMuB,KACpBxC,EAAOqB,MAAQJ,EAAMmB,MAErBxC,QAAQC,IAAI,+BAAgCG,GAC5CX,EAAuBW,IAGzByD,MAAM,0DCqFKC,cAjGX,SAAAA,EAAY7E,EAAO+B,GAAO,IAAAP,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,IACtBrD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoD,GAAA/C,KAAAH,KAAM3B,EAAO+B,KAoBjB+C,qBAAuB,SAACC,GACpBvD,EAAKU,SAAS,CAAEe,KAAM8B,EAAEC,OAAO5C,SAtBTZ,EAyB1ByD,sBAAwB,SAACF,GACrBvD,EAAKU,SAAS,CAAEqB,MAAOwB,EAAEC,OAAO5C,SA1BVZ,EA6B1B0D,0BAA4B,SAACH,GACzBvD,EAAKU,SAAS,CAAEuB,UAAWsB,EAAEC,OAAO5C,SA9BdZ,EAiC1B2D,qBAAuB,SAACJ,GACpBvD,EAAKU,SAAS,CAAEyB,KAAMoB,EAAEC,OAAO5C,SAlCTZ,EAqC1B4D,yBAA2B,SAACL,GACxBvD,EAAKU,SAAS,CAAE2B,SAAUkB,EAAEC,OAAO5C,SAtCbZ,EAyC1B6D,yBAA2B,SAACN,GACxBvD,EAAKU,SAAS,CAAE6B,aAAcgB,EAAEC,OAAO5C,SA1CjBZ,EA6C1B8D,gBAAkB,SAACP,GACfA,EAAEQ,iBACF/D,EAAKU,SAAS,CACVe,KAAM,GACNM,MAAO,GACPE,UAAW,GACXE,KAAM,GACNE,SAAU,GACVE,aAAc,MArDIvC,EAyD1BgE,iBAAmB,SAACT,GAChBA,EAAEQ,iBAEF,IAAME,EAAgB,CACpBxC,KAAMzB,EAAKO,MAAMkB,KACjBM,MAAO/B,EAAKO,MAAMwB,MAClBE,UAAWjC,EAAKO,MAAM0B,UACtBE,KAAMnC,EAAKO,MAAM4B,KACjBE,SAAUrC,EAAKO,MAAM8B,SACrBE,aAAcvC,EAAKO,MAAMgC,cAE3BU,EAAgBC,eAAee,GAC/BjE,EAAK8D,gBAAgBP,IAnErBvD,EAAKO,MAAQ,CACTkB,KAAM,GACNM,MAAO,GACPE,UAAW,GACXE,KAAM,GACNE,SAAU,GACVE,aAAc,GAEdG,aAAc,CAAC,SAAU,YACzBD,WAAY,oBACZ9D,MAAO,qBAZWqB,qHAyEtB,OACI/B,EAAAC,EAAAC,cAAC8C,EAAA,SAAD,KACIhD,EAAAC,EAAAC,cAAA,QAAMM,UAAU,OAAOyF,SAAU/D,KAAK6D,iBAAkBG,aAAa,MAAM9C,MAAO,CAACC,OAAQ,kBACvFrD,EAAAC,EAAAC,cAACiG,EAAD,CACI1F,YAAcyB,KAAKI,MACnBsB,gBAAiB1B,KAAKmD,qBACtBtB,iBAAkB7B,KAAKsD,sBACvBvB,qBAAsB/B,KAAKuD,0BAC3BtB,gBAAiBjC,KAAKwD,qBACtBrB,oBAAqBnC,KAAKyD,yBAC1Bf,UAAY1C,KAAK2D,gBAEjBtB,wBAAyBrC,KAAK0D,oCAtFtBzF,aCQXiG,mLAEjB,OACEpG,EAAAC,EAAAC,cAAC8C,EAAA,SAAD,KACEhD,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAQC,QAAQ,OAAOC,OAAO,KAAKC,MAAM,OACvCxG,EAAAC,EAAAC,cAACmG,EAAA,EAAOI,MAAR,KACEzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMC,GAAG,KACP3G,EAAAC,EAAAC,cAAA,OAAKM,UAAU,iBAAiBoG,IAAKC,IAAMC,IAAI,WAGnD9G,EAAAC,EAAAC,cAACmG,EAAA,EAAOU,OAAR,CAAeC,gBAAc,qBAC7BhH,EAAAC,EAAAC,cAACmG,EAAA,EAAOY,SAAR,CAAiB1D,GAAG,oBAClBvD,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAK1G,UAAU,WACbR,EAAAC,EAAAC,cAACgH,EAAA,EAAIC,KAAL,KACInH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAASlG,UAAU,cAAc4G,OAAK,EAACT,GAAG,KACxC3G,EAAAC,EAAAC,cAAA,iCAINF,EAAAC,EAAAC,cAACgH,EAAA,EAAIC,KAAL,KACEnH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAASlG,UAAU,cAAc4G,OAAK,EAACT,GAAG,eACxC3G,EAAAC,EAAAC,cAAA,2BAIJF,EAAAC,EAAAC,cAACgH,EAAA,EAAIC,KAAL,KACEnH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAASlG,UAAU,cAAcmG,GAAG,eAClC3G,EAAAC,EAAAC,cAAA,2BAIJF,EAAAC,EAAAC,cAACgH,EAAA,EAAIC,KAAL,KACEnH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAASlG,UAAU,cAAcmG,GAAG,sBAClC3G,EAAAC,EAAAC,cAAA,8BAIJF,EAAAC,EAAAC,cAACgH,EAAA,EAAIC,KAAL,KACEnH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAASlG,UAAU,cAAcmG,GAAG,sBAClC3G,EAAAC,EAAAC,cAAA,wBAIJF,EAAAC,EAAAC,cAACgH,EAAA,EAAIC,KAAL,KACEnH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAASlG,UAAU,cAAcmG,GAAG,WAClC3G,EAAAC,EAAAC,cAAA,mCAOVF,EAAAC,EAAAC,cAACmH,EAAA,EAAD,KACErH,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CAAOD,OAAK,EAACE,KAAK,IAAIC,UAAWxH,IACjCC,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWnH,IACrCJ,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWlH,IACrCL,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CAAOC,KAAK,qBAAqBC,UAAWzF,IAC5C9B,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CAAOC,KAAK,qBAAqBC,UAAWnC,aAzDXjF,aCC5BqH,MARf,WACE,OACIxH,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OACbR,EAAAC,EAAAC,cAACuH,EAAD,QCIYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACLhI,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACI1G,EAAAC,EAAAC,cAAC8C,EAAA,WAAD,KACIhD,EAAAC,EAAAC,cAAC+H,EAAD,QAGZC,SAASC,eAAe,SDoHlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpH,KAAK,SAAAqH,GACjCA,EAAaC","file":"static/js/main.934f16a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c822dbb8.png\";","import React, { Component } from 'react';\n\nclass Login extends Component {\n    render() {\n            return(\n                <div>\n                    <p>Componente de Login</p>\n                    \n                    \n                </div>\n            )\n        }\n    }\n\nexport default Login;","import React, { Component } from 'react';\n\nclass ShowOrders extends Component {\n    render() {\n            return(\n                <div>\n                    <p>Componente de Mostrar ordenes</p>\n                    \n                    \n                </div>\n            )\n        }\n    }\n\nexport default ShowOrders;","import React, { Component } from 'react';\n\nclass MakeOrders extends Component {\n    render() {\n            return(\n                <div>\n                    <p>Componente para tomar ordenes</p>\n                    \n                    \n                </div>\n            )\n        }\n    }\n\nexport default MakeOrders;","import React from 'react';\n\nconst TableEmployees = (props) => (\n    <div className=\"mainContent\">\n        <div className=\"container\">\n            <h3>{props.defaultData.title}</h3>\n            \n            {/* <table style={{width: \"100%\"}}>\n                <thead>\n                    <tr>\n                        <th>Nombre</th>\n                        <th>Puesto</th> \n                        <th>Email</th>\n                        <th>Actualizar</th>\n                        <th>Borrar</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>\n                        </td>\n                    </tr>\n                </tbody>\n            </table> */}\n\n            \n        </div>    \n    </div>\n);\n\n// {props.defaultData.allEmployees.map((optionValue, index) => {\n//     return (\n//         <option \n//             key={index} \n//             value={optionValue}>{optionValue}\n//         </option>);\n// })}\n\nexport default TableEmployees;","const URL = 'http://localhost:8080/api/v1'\n\nconst headers = new Headers();\nheaders.append('Content-Type', 'application/json');\n\nconst getAll = () => (\n  fetch(URL+'/employees', {\n    method: 'GET',\n    headers\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('Success fetch GET all Data Method for RESTFull:', data)\n    return data\n  })\n  .catch(error => console.error('Error:', error))\n);\n\nconst addOne = (newEmp) => {\n  fetch(URL+'/employees', {\n    method: 'POST',\n    headers,\n    body : JSON.stringify(newEmp)\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('Success fetch POST Method for RESTFull:', data) \n    return data \n   })\n  .catch(error => console.error('Error:', error))\n};\n\nconst getByID = (idEmp) => (\n  fetch(URL+'/employees/'+idEmp, {\n    method: 'GET',\n    headers\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('Success fetch GET by ID Method for RESTFull:', data)\n    return data\n  })\n  .catch(error => console.error('Error:', error))\n);\n\nconst updateOne = (idEmp, emp) => {\n  fetch(URL+'/employees/'+idEmp, {\n    method: 'PUT',\n    headers,\n    body : JSON.stringify(emp)\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('Success fetch PUT Method for RESTFull::', data)\n    return data\n  })\n  .catch(error => console.error('Error:', error));\n}\n\nconst deleteOne = (idEmp) => {\n  fetch(URL+'/employees/'+idEmp,  {\n    method: 'DELETE',\n    headers\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('Success fetch DELETE Method for RESTFull:', data)\n    return data\n  })\n  .catch(error => console.error('Error:', error));\n};\n\nexport const employeeService = {\n  getAll,\n  getByID,\n  addOne,\n  updateOne,\n  deleteOne\n}\n\n// sericios puede compartir datos entre capas y componentes","import React, { Component, Fragment } from 'react';\nimport TableEmployees from './employees-component';\n//import { employeeFactory } from '../../domain/employeeFactory'\nimport { employeeService } from '../../services/employeeService'\n\n\nclass EmployeeContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allEmployees: [],\n            title: 'Administración de todos los empleados:'\n        };\n    }\n   \n    componentDidMount() {\n        employeeService.getAll().then( \n            json => {\n                this.setState({ allEmployees : json })\n                console.log('componentDidMount():', this.state.allEmployees )\n            }\n        ) \n    }\n\n    _renderAllUsers(){\n        let users = this.state.allEmployees;        \n        return (users.map((value, index)=>{\n            return (\n                <ul key={index}>\n                    <li> Name: {value.Name}</li> \n                    <li> email: {value.Email} </li> \n                </ul>)\n        }))\n    }\n\n    render(){\n        console.log('render():', this.state.allEmployees)\n        return(\n            <Fragment>\n                <TableEmployees\n                    defaultData={this.state}\n                />\n                <div>\n                    {this._renderAllUsers()}\n                </div>\n            </Fragment>\n        )     \n    }\n}\nexport default EmployeeContainer;\n","import React from 'react';\n\nconst Register = (props) => (\n    <div className=\"mainContent\">\n        <div className=\"container\">\n            <h3>{props.defaultData.title}</h3>\n            <div className=\"LoginImage\">\n            <div style={{border: \"5px solid orange\"}}>\n                <label htmlFor=\"nya\">Nombre y Apellido: *</label>\n                <br />\n                <input \n                    className=\"form-control\" id=\"name\" name=\"name\" \n                    type=\"text\" \n                    placeholder = \"Nancy Rodriguez\" \n                    value= {props.defaultData.name} \n                    onChange={props.controlFuncName}\n                    required\n                    />\n                <br />\n                <label htmlFor=\"email\">Email: *</label>\n                <br />\n                <input \n                    className=\"form-control\" id=\"email\" name=\"email\"\n                    type=\"text\" \n                    placeholder = \"nancy@sample.com\" \n                    value={props.defaultData.email}\n                    onChange={props.controlFuncEmail} \n                    required\n                    />\n                <br />\n                <input \n                    className=\"form-control\" id=\"emailcopy\" name=\"emailcopy\"\n                    type=\"text\" \n                    placeholder = \"nancy@sample.com\" \n                    value={props.defaultData.emailcopy}\n                    onChange={props.controlFuncCopyEmail} \n                    required\n                    />\n                <br />\n                <label htmlFor=\"password\">Contraseña:</label>\n                <br/>\n                <input \n                    className=\"form-control\" id=\"pass\" name=\"pass\"\n                    type=\"password\" \n                    value={props.defaultData.pass}\n                    onChange={props.controlFuncPass}\n                    required\n                    />\n                <br />\n                <input \n                    className=\"form-control\" id=\"passcopy\" name=\"passcopy\"\n                    type=\"password\" \n                    value={props.defaultData.passcopy}\n                    onChange={props.controlFuncCopyPass}\n                    required\n                    />\n                <br />\n                <div className=\"form-group\">\n                    <label htmlFor=\"type\">Tipo de Empleado:</label>\n                    <br/>\n                    <select\n                    id=\"typeCombo\"\n                    name=\"typeCombo\"\n                    value={props.defaultData.typeEmployee}\n                    // options={props.defaultData.optionsCombo}\n                    onChange={props.controlFuncTypeEmployee}\n                    className=\"form-select\">\n                    <option value=\"\">{props.defaultData.titleCombo}</option>\n                    {props.defaultData.optionsCombo.map((optionValue, index) => {\n                        return (\n                            <option \n                                key={index} \n                                value={optionValue}>{optionValue}\n                            </option>);\n                    })}\n                    </select>\n                </div>\n                <input className=\"btn\" type=\"submit\" value=\"Enviar\"/>\n                <button className=\"btn btn-link float-left\"\n                        onClick={props.clearForm}>Limpiar Forma</button>\n            </div>\n            </div>\n        </div>\n    </div>\n); \n\nexport default Register;","export class Employee {\n    constructor(typeEmployee, name, email, pass){\n        this.TypeEmployee = typeEmployee;\n        this.Name = name;\n        this.Email = email; \n        this.Pass = pass\n    }\n}\n\n//La definicion para cada variable no es estricta como para el Schema de mongoose porque tu Nancy estas usando js en vez de ts","import {Employee} from '../services/employee'\nimport {employeeService} from '../services/employeeService';\n\nexport const createEmployee = (value) => {\n  let newEmp = new Employee();\n  \n  if(value.pass === value.passcopy && \n    value.email === value.emailcopy){\n      newEmp.TypeEmployee = value.typeEmployee;\n      newEmp.Name = (value.name).toUpperCase();\n      newEmp.Pass = value.pass;\n      newEmp.Email = value.email;\n\n      console.log('Send this in a POST request:', newEmp);\n      employeeService.addOne(newEmp)\n  }\n  else{\n    alert('los passwords no son iguales o el email es diferente')\n  }\n}\n\nexport const employeeFactory = {\n  createEmployee,\n};","import React, { Component, Fragment } from 'react';\nimport Register from './register-component';\nimport { employeeFactory } from '../../domain/employeeFactory'\n\nclass RegisterContainer extends Component {\n    constructor(props, state) {\n        super(props, state);\n        this.state = {\n            name: '',\n            email: '',\n            emailcopy: '',\n            pass: '',\n            passcopy: '',\n            typeEmployee: '',\n            \n            optionsCombo: ['Mesero', 'Cocinero'],\n            titleCombo: 'Selecciona puesto',\n            title: 'Registrar Usuario'\n        };\n    }\n\n    componentDidMount() {\n        //Si el componetne cargo, y el usuario esta logueados y el usuario quiere cambiar sus contraseoas o valores\n        //this.setState({ title:'Actualizar Usuario' });\n    }\n\n    handleFullNameChange = (e) =>{\n        this.setState({ name: e.target.value });\n    }\n\n    handleFullEmailChange = (e) =>{\n        this.setState({ email: e.target.value });\n    }\n\n    handleFullEmailCopyChange = (e) =>{\n        this.setState({ emailcopy: e.target.value });\n    }\n\n    handleFullPassChange = (e) =>{\n        this.setState({ pass: e.target.value });\n    }\n\n    handleFullPassCopyChange = (e) =>{\n        this.setState({ passcopy: e.target.value });\n    }\n\n    handleTypeEmployeeSelect = (e) =>{\n        this.setState({ typeEmployee: e.target.value });\n\t}\n\n    handleClearForm = (e) =>{\n        e.preventDefault();\n        this.setState({\n            name: '',\n            email: '',\n            emailcopy: '',\n            pass: '',\n            passcopy: '',\n            typeEmployee: '',\n        });\n    }\n\n    handleFormSubmit = (e) =>{\n        e.preventDefault();\n\n        const allDataInputs = {\n          name: this.state.name,\n          email: this.state.email,\n          emailcopy: this.state.emailcopy,\n          pass: this.state.pass,\n          passcopy: this.state.passcopy,\n          typeEmployee: this.state.typeEmployee,\n        };\n        employeeFactory.createEmployee(allDataInputs);\n        this.handleClearForm(e);\n    }\n\n    render() {\n        return(\n            <Fragment>\n                <form className=\"form\" onSubmit={this.handleFormSubmit} autoComplete='off' style={{border: \"5px solid red\"}}>\n                    <Register \n                        defaultData= {this.state}\n                        controlFuncName={this.handleFullNameChange}\n                        controlFuncEmail={this.handleFullEmailChange}\n                        controlFuncCopyEmail={this.handleFullEmailCopyChange}\n                        controlFuncPass={this.handleFullPassChange}\n                        controlFuncCopyPass={this.handleFullPassCopyChange}\n                        clearForm= {this.handleClearForm}\n\n                        controlFuncTypeEmployee={this.handleTypeEmployeeSelect}\n                    />\n                </form>\n            </Fragment>\n        )\n    }\n}\n\n// Register.propTypes = {\n//     controlFuncName: React.PropTypes.func.isRequired\n// };\n          \nexport default RegisterContainer;","import React, { Component, Fragment } from \"react\";\nimport Logo from '../assets/images/logo.png';\nimport { NavLink, Link, Route, Switch } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nimport Login from '../components/Login'\nimport ShowOrders from '../components/ShowOrders';\nimport MakeOrders from '../components/MakeOrders';\nimport EmployeeContainer from '../components/employees/employees-container';\nimport RegisterContainer from '../components/employees/register-container';\n\n\nexport default class NavbarProfile extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Navbar variant=\"dark\" expand=\"lg\" fixed=\"top\">\n          <Navbar.Brand>\n            <Link to=\"/\">\n              <img className=\"App-logo-image\" src={Logo} alt=\"logo\" />\n            </Link>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <Nav.Item>\n                  <NavLink className=\"navMenuLink\" exact to=\"/\">\n                    <h6>Iniciar sesión</h6>\n                  </NavLink>\n              </Nav.Item>\n\n              <Nav.Item>\n                <NavLink className=\"navMenuLink\" exact to=\"/MakeOrders\">\n                  <h6>Tomar orden</h6>\n                </NavLink>\n              </Nav.Item>\n\n              <Nav.Item>\n                <NavLink className=\"navMenuLink\" to=\"/ShowOrders\">\n                  <h6>Ver pedidos</h6>\n                </NavLink>\n              </Nav.Item>\n\n              <Nav.Item>\n                <NavLink className=\"navMenuLink\" to=\"/EmployeeContainer\">\n                  <h6>Administracion</h6>\n                </NavLink>\n              </Nav.Item>\n\n              <Nav.Item>\n                <NavLink className=\"navMenuLink\" to=\"/RegisterContainer\">\n                  <h6>Registro</h6>\n                </NavLink>\n              </Nav.Item>\n\n              <Nav.Item>\n                <NavLink className=\"navMenuLink\" to=\"/LogOut\">\n                  <h6>Cerrar sesión</h6>\n                </NavLink>\n              </Nav.Item>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/ShowOrders\" component={ShowOrders} />\n          <Route path=\"/MakeOrders\" component={MakeOrders} />\n          <Route path=\"/EmployeeContainer\" component={EmployeeContainer} />\n          <Route path=\"/RegisterContainer\" component={RegisterContainer} />\n        </Switch>\n\n      </Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\n\nimport NavbarProfile from './components/NavbarProfile';\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <NavbarProfile />\n      </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <HashRouter>\n        <StrictMode>\n            <App />\n        </StrictMode>\n    </HashRouter>, \ndocument.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}