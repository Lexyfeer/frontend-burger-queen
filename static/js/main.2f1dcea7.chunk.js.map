{"version":3,"sources":["assets/images/logo.png","components/Login.js","components/ShowOrders.js","components/MakeOrders.js","components/employees/employees-component.js","services/employeeService.js","components/employees/employees-container.js","components/employees/register-component.js","services/employee.js","domain/employeeFactory.js","components/employees/register-container.js","components/employees/updater-container.js","components/NavbarProfile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","react_default","a","createElement","Component","ShowOrders","MakeOrders","TableEmployees","props","rows","arrayEmployees","className","title","border","style","width","map","value","index","key","Name","TypeEmployee","Email","react_router_dom","to","pathname","userData","onClick","controlFuncDelete","URL","headers","Headers","append","employeeService","getAll","fetch","method","then","response","json","data","console","log","catch","error","getByID","idEmp","addOne","newEmp","body","JSON","stringify","updateOne","emp","deleteOne","EmployeeContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_deleteEmployee","state","allEmployees","splice","setState","_id","_this2","length","react","employees_component","RegisterUpdater","defaultData","htmlFor","id","name","type","placeholder","onChange","controlFuncName","required","email","controlFuncEmail","emailcopy","controlFuncCopyEmail","pass","controlFuncPass","passcopy","controlFuncCopyPass","typeEmployee","controlFuncTypeEmployee","titleCombo","optionsCombo","optionValue","clearForm","Employee","Pass","checkMailDuplicate","employeeFactory","createEmployee","toUpperCase","alert","updateEmployee","RegisterContainer","handleFullNameChange","e","target","handleFullEmailChange","handleFullEmailCopyChange","handleFullPassChange","handleFullPassCopyChange","handleTypeEmployeeSelect","handleClearForm","preventDefault","handleFormSubmit","allDataInputs","onSubmit","autoComplete","register_component","UpdateContainer","location","NavbarProfile","Navbar","variant","expand","fixed","Brand","src","Logo","alt","Toggle","aria-controls","Collapse","Nav","Item","exact","react_router","path","component","App","NavbarProfile_NavbarProfile","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+RCczBC,mLAVH,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wCAJAC,aCYLC,mLAVH,OACIJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kDAJKC,aCYVE,mLAVH,OACIL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kDAJKC,aC6CVG,EA5CQ,SAACC,GACpB,IAAIC,EAAOD,EAAME,eAmBjB,OACIT,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,eACXV,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,aACXV,EAAAC,EAAAC,cAAA,UAAKK,EAAMI,OACXX,EAAAC,EAAAC,cAAA,SAAOU,OAAO,IAAIC,MAAO,CAACC,MAAO,SAC7Bd,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,sBAGRF,EAAAC,EAAAC,cAAA,aA/BNM,EAAKO,IAAI,SAACC,EAAOC,GAAR,OACXjB,EAAAC,EAAAC,cAAA,MAAIgB,IAAKD,GACTjB,EAAAC,EAAAC,cAAA,UAAKe,GACLjB,EAAAC,EAAAC,cAAA,UAAKc,EAAMG,MACXnB,EAAAC,EAAAC,cAAA,UAAKc,EAAMI,cACXpB,EAAAC,EAAAC,cAAA,UAAKc,EAAMK,OACXrB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMC,GAAK,CAAEC,SAAU,mBAAoBC,SAAUT,IAArD,iBAEJhB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAQwB,QAAW,WAAQnB,EAAMoB,kBAAkBV,EAAOD,KAA1D,mBCjBVY,EAAM,+BAENC,EAAU,IAAIC,QACpBD,EAAQE,OAAO,eAAgB,oBAE/B,IAmEaC,EAAkB,CAC7BC,OApEa,kBACbC,MAAMN,EAAI,aAAc,CACtBO,OAAQ,MACRN,YAEDO,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAEJ,OADAC,QAAQC,IAAI,kDAAmDF,GACxDA,IAERG,MAAM,SAAAC,GAAK,OAAIH,QAAQG,MAAM,SAAUA,MA2DxCC,QA1Cc,SAACC,GAAD,OACdX,MAAMN,EAAI,cAAciB,EAAO,CAC7BV,OAAQ,MACRN,YAEDO,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAEJ,OADAC,QAAQC,IAAI,+CAAgDF,GACrDA,IAERG,MAAM,SAAAC,GAAK,OAAIH,QAAQG,MAAM,SAAUA,MAiCxCG,OAzDa,SAACC,GACdb,MAAMN,EAAI,aAAc,CACtBO,OAAQ,OACRN,UACAmB,KAAOC,KAAKC,UAAUH,KAEvBX,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAEJ,OADAC,QAAQC,IAAI,0CAA2CF,GAChDA,IAERG,MAAM,SAAAC,GAAK,OAAIH,QAAQG,MAAM,SAAUA,MA+CxCQ,UA/BgB,SAACN,EAAOO,GACxBlB,MAAMN,EAAI,cAAciB,EAAO,CAC7BV,OAAQ,MACRN,UACAmB,KAAOC,KAAKC,UAAUE,KAEvBhB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAEJ,OADAC,QAAQC,IAAI,0CAA2CF,GAChDA,IAERG,MAAM,SAAAC,GAAK,OAAIH,QAAQG,MAAM,SAAUA,MAqBxCU,UAlBgB,SAACR,GACjBX,MAAMN,EAAI,cAAciB,EAAQ,CAC9BV,OAAQ,SACRN,YAEDO,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAEJ,OADAC,QAAQC,IAAI,4CAA6CF,GAClDA,IAERG,MAAM,SAAAC,GAAK,OAAIH,QAAQG,MAAM,SAAUA,OCb3BW,cA9CX,SAAAA,EAAY/C,GAAO,IAAAgD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMnD,KAgBVuD,gBAAkB,SAAC7C,EAAOD,GACtBwB,QAAQC,IAAI,aAAcxB,EAAOD,GACjCuC,EAAKQ,MAAMC,aAAaC,OAAOhD,EAAO,GACtCsC,EAAKW,SAAS,CAACF,aAAeT,EAAKQ,MAAMC,eACzChC,EAAgBqB,UAAUrC,EAAMmD,MAnBhCZ,EAAKQ,MAAQ,CACTC,aAAc,GACdrD,MAAO,6CAJI4C,mFAQC,IAAAa,EAAAV,KAChBlB,QAAQC,IAAI,4BACZT,EAAgBC,SAASG,KACrB,SAAAE,GACI8B,EAAKF,SAAS,CAAEF,aAAe1B,uCAevC,OAFAE,QAAQC,IAAI,gBAERiB,KAAKK,MAAMC,aAAaK,OAAS,EAE7BrE,EAAAC,EAAAC,cAACoE,EAAA,SAAD,KACAtE,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMC,GAAG,sBAAT,eACIvB,EAAAC,EAAAC,cAACqE,EAAD,CACI5D,MAAO+C,KAAKK,MAAMpD,MAClBF,eAAgBiD,KAAKK,MAAMC,aAC3BrC,kBAAmB+B,KAAKI,mBAMhC9D,EAAAC,EAAAC,cAAA,iDAzCgBC,aC+EjBqE,EArFS,SAACjE,GAAD,OACpBP,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,eACXV,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,aACXV,EAAAC,EAAAC,cAAA,UAAKK,EAAMkE,YAAY9D,OACvBX,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,cACfV,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAACD,OAAQ,qBACjBZ,EAAAC,EAAAC,cAAA,SAAOwE,QAAQ,OAAf,wBACA1E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIQ,UAAU,eAAeiE,GAAG,OAAOC,KAAK,OACxCC,KAAK,OACLC,YAAc,kBACd9D,MAAQT,EAAMkE,YAAYG,KAC1BG,SAAUxE,EAAMyE,gBAChBC,UAAQ,IAEZjF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOwE,QAAQ,SAAf,YACA1E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIQ,UAAU,eAAeiE,GAAG,QAAQC,KAAK,QACzCC,KAAK,OACLC,YAAc,mBACd9D,MAAOT,EAAMkE,YAAYS,MACzBH,SAAUxE,EAAM4E,iBAChBF,UAAQ,IAEZjF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIQ,UAAU,eAAeiE,GAAG,YAAYC,KAAK,YAC7CC,KAAK,OACLC,YAAc,mBACd9D,MAAOT,EAAMkE,YAAYW,UACzBL,SAAUxE,EAAM8E,qBAChBJ,UAAQ,IAEZjF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOwE,QAAQ,YAAf,kBACA1E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIQ,UAAU,eAAeiE,GAAG,OAAOC,KAAK,OACxCC,KAAK,WACL7D,MAAOT,EAAMkE,YAAYa,KACzBP,SAAUxE,EAAMgF,gBAChBN,UAAQ,IAEZjF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIQ,UAAU,eAAeiE,GAAG,WAAWC,KAAK,WAC5CC,KAAK,WACL7D,MAAOT,EAAMkE,YAAYe,SACzBT,SAAUxE,EAAMkF,oBAChBR,UAAQ,IAEZjF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,cACXV,EAAAC,EAAAC,cAAA,SAAOwE,QAAQ,QAAf,qBACA1E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACAyE,GAAG,YACHC,KAAK,YACL5D,MAAOT,EAAMkE,YAAYiB,aAEzBX,SAAUxE,EAAMoF,wBAChBjF,UAAU,eACVV,EAAAC,EAAAC,cAAA,UAAQc,MAAM,IAAIT,EAAMkE,YAAYmB,YACnCrF,EAAMkE,YAAYoB,aAAa9E,IAAI,SAAC+E,EAAa7E,GAC9C,OACIjB,EAAAC,EAAAC,cAAA,UACIgB,IAAKD,EACLD,MAAO8E,GAAcA,OAKrC9F,EAAAC,EAAAC,cAAA,SAAOQ,UAAU,MAAMmE,KAAK,SAAS7D,MAAM,SAASO,GAAG,uBAEvDvB,EAAAC,EAAAC,cAAA,UAAQQ,UAAU,0BACVgB,QAASnB,EAAMwF,WADvB,sBChFHC,EACT,SAAAA,EAAYN,EAAcd,EAAMM,EAAOI,GAAM9B,OAAAC,EAAA,EAAAD,CAAAE,KAAAsC,GACzCtC,KAAKtC,aAAesE,EACpBhC,KAAKvC,KAAOyD,EACZlB,KAAKrC,MAAQ6D,EACbxB,KAAKuC,KAAOX,GCmCdY,EAAqB,aAQdC,EAAkB,CAC7BC,eA9C4B,SAACpF,GAC7B,IAAI+B,EAAS,IAAIiD,EAEdhF,EAAMsE,OAAStE,EAAMwE,UACtBxE,EAAMkE,QAAUlE,EAAMoE,WACpBrC,EAAO3B,aAAeJ,EAAM0E,aAC5B3C,EAAO5B,KAAQH,EAAM4D,KAAMyB,cAC3BtD,EAAOkD,KAAOjF,EAAMsE,KACpBvC,EAAO1B,MAAQL,EAAMkE,MAErB1C,QAAQC,IAAI,+BAAgCM,GAC5Cf,EAAgBc,OAAOC,IAGzBuD,MAAM,yDAiCRC,eA7B4B,SAAC5B,EAAI3D,GACjCkF,IAEA,IAAI9C,EAAM,GACPpC,EAAMsE,OAAStE,EAAMwE,UACtBxE,EAAMkE,QAAUlE,EAAMoE,WACpBhC,EAAIhC,aAAeJ,EAAM0E,aACzBtC,EAAIjC,KAAQH,EAAM4D,KAAMyB,cACxBjD,EAAI6C,KAAOjF,EAAMsE,KACjBlC,EAAI/B,MAAQL,EAAMkE,MAElB1C,QAAQC,IAAI,8BAA+BW,GAC3CpB,EAAgBmB,UAAUwB,EAAIvB,IAGhCkD,MAAM,0DCgEKE,cA7FX,SAAAA,EAAYjG,GAAO,IAAAgD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8C,IACfjD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgD,GAAA3C,KAAAH,KAAMnD,KAeVkG,qBAAuB,SAACC,GACpBnD,EAAKW,SAAS,CAAEU,KAAM8B,EAAEC,OAAO3F,SAjBhBuC,EAoBnBqD,sBAAwB,SAACF,GACrBnD,EAAKW,SAAS,CAAEgB,MAAOwB,EAAEC,OAAO3F,SArBjBuC,EAwBnBsD,0BAA4B,SAACH,GACzBnD,EAAKW,SAAS,CAAEkB,UAAWsB,EAAEC,OAAO3F,SAzBrBuC,EA4BnBuD,qBAAuB,SAACJ,GACpBnD,EAAKW,SAAS,CAAEoB,KAAMoB,EAAEC,OAAO3F,SA7BhBuC,EAgCnBwD,yBAA2B,SAACL,GACxBnD,EAAKW,SAAS,CAAEsB,SAAUkB,EAAEC,OAAO3F,SAjCpBuC,EAoCnByD,yBAA2B,SAACN,GACxBnD,EAAKW,SAAS,CAAEwB,aAAcgB,EAAEC,OAAO3F,SArCxBuC,EAwCnB0D,gBAAkB,SAACP,GACfA,EAAEQ,iBACF3D,EAAKW,SAAS,CACVU,KAAM,GACNM,MAAO,GACPE,UAAW,GACXE,KAAM,GACNE,SAAU,GACVE,aAAc,MAhDHnC,EAoDnB4D,iBAAmB,SAACT,GAChBA,EAAEQ,iBAEF,IAAME,EAAgB,CACpBxC,KAAMrB,EAAKQ,MAAMa,KACjBM,MAAO3B,EAAKQ,MAAMmB,MAClBE,UAAW7B,EAAKQ,MAAMqB,UACtBE,KAAM/B,EAAKQ,MAAMuB,KACjBE,SAAUjC,EAAKQ,MAAMyB,SACrBE,aAAcnC,EAAKQ,MAAM2B,cAE3BS,EAAgBC,eAAegB,GAC/B7D,EAAK0D,gBAAgBP,IA9DrBnD,EAAKQ,MAAQ,CACTa,KAAM,GACNM,MAAO,GACPE,UAAW,GACXE,KAAM,GACNE,SAAU,GACVE,aAAc,GAEdG,aAAc,CAAC,SAAU,YACzBD,WAAY,oBACZjF,MAAO,qBAZI4C,wEAoEf,OACIvD,EAAAC,EAAAC,cAACoE,EAAA,SAAD,KACItE,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,OAAO2G,SAAU3D,KAAKyD,iBAAkBG,aAAa,MAAMzG,MAAO,CAACD,OAAQ,kBACvFZ,EAAAC,EAAAC,cAACqH,EAAD,CACI9C,YAAcf,KAAKK,MACnBiB,gBAAiBtB,KAAK+C,qBACtBtB,iBAAkBzB,KAAKkD,sBACvBvB,qBAAsB3B,KAAKmD,0BAC3BtB,gBAAiB7B,KAAKoD,qBACtBrB,oBAAqB/B,KAAKqD,yBAC1BhB,UAAYrC,KAAKuD,gBAEjBtB,wBAAyBjC,KAAKsD,4BAGtChH,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMC,GAAG,sBAAT,sBApFgBpB,aC6GjBqH,cA5GX,SAAAA,EAAYjH,GAAO,IAAAgD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8D,IACfjE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgE,GAAA3D,KAAAH,KAAMnD,KA2BVkG,qBAAuB,SAACC,GACpBnD,EAAKW,SAAS,CAAEU,KAAM8B,EAAEC,OAAO3F,SA7BhBuC,EAgCnBqD,sBAAwB,SAACF,GACrBnD,EAAKW,SAAS,CAAEgB,MAAOwB,EAAEC,OAAO3F,SAjCjBuC,EAoCnBsD,0BAA4B,SAACH,GACzBnD,EAAKW,SAAS,CAAEkB,UAAWsB,EAAEC,OAAO3F,SArCrBuC,EAwCnBuD,qBAAuB,SAACJ,GACpBnD,EAAKW,SAAS,CAAEoB,KAAMoB,EAAEC,OAAO3F,SAzChBuC,EA4CnBwD,yBAA2B,SAACL,GACxBnD,EAAKW,SAAS,CAAEsB,SAAUkB,EAAEC,OAAO3F,SA7CpBuC,EAgDnByD,yBAA2B,SAACN,GACxBnD,EAAKW,SAAS,CAAEwB,aAAcgB,EAAEC,OAAO3F,SAjDxBuC,EAoDnB0D,gBAAkB,SAACP,GACfA,EAAEQ,iBACF3D,EAAKW,SAAS,CACVU,KAAM,GACNM,MAAO,GACPE,UAAW,GACXE,KAAM,GACNE,SAAU,GACVE,aAAc,MA5DHnC,EAkEnB4D,iBAAmB,SAACT,GAChBA,EAAEQ,iBAEF,IAAME,EAAgB,CACpBxC,KAAMrB,EAAKQ,MAAMa,KACjBM,MAAO3B,EAAKQ,MAAMmB,MAClBE,UAAW7B,EAAKQ,MAAMqB,UACtBE,KAAM/B,EAAKQ,MAAMuB,KACjBE,SAAUjC,EAAKQ,MAAMyB,SACrBE,aAAcnC,EAAKQ,MAAM2B,cAE3BlD,QAAQC,IAAI2E,GACZjB,EAAgBI,eAAehD,EAAKhD,MAAMkH,SAAShG,SAAS0C,IAAKiD,GACjE7D,EAAK0D,gBAAgBP,IA7ErBnD,EAAKQ,MAAQ,CACTa,KAAM,GACNM,MAAO,GACPE,UAAW,GACXE,KAAM,GACNE,SAAU,GACVE,aAAc,GAEdG,aAAc,CAAC,SAAU,YACzBD,WAAY,oBACZjF,MAAO,sBAZI4C,mFAkBfG,KAAKQ,SAAS,CACVU,KAAMlB,KAAKnD,MAAMkH,SAAShG,SAASN,KACnC+D,MAAOxB,KAAKnD,MAAMkH,SAAShG,SAASJ,MACpC+D,UAAW1B,KAAKnD,MAAMkH,SAAShG,SAASJ,MACxCiE,KAAM5B,KAAKnD,MAAMkH,SAAShG,SAASwE,KACnCT,SAAU9B,KAAKnD,MAAMkH,SAAShG,SAASwE,KACvCP,aAAchC,KAAKnD,MAAMkH,SAAShG,SAASL,gDA2D/C,OACIpB,EAAAC,EAAAC,cAACoE,EAAA,SAAD,KACItE,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,OAAO2G,SAAU3D,KAAKyD,iBAAkBG,aAAa,MAAMzG,MAAO,CAACD,OAAQ,kBACvFZ,EAAAC,EAAAC,cAACqH,EAAD,CACI9C,YAAcf,KAAKK,MACnBiB,gBAAiBtB,KAAK+C,qBACtBtB,iBAAkBzB,KAAKkD,sBACvBvB,qBAAsB3B,KAAKmD,0BAC3BtB,gBAAiB7B,KAAKoD,qBACtBrB,oBAAqB/B,KAAKqD,yBAC1BhB,UAAYrC,KAAKuD,gBAEjBtB,wBAAyBjC,KAAKsD,4BAGtChH,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMC,GAAG,sBAAT,sBAnGcpB,aCOTuH,mLAEjB,OACE1H,EAAAC,EAAAC,cAACoE,EAAA,SAAD,KACEtE,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAQC,QAAQ,OAAOC,OAAO,KAAKC,MAAM,OACvC9H,EAAAC,EAAAC,cAACyH,EAAA,EAAOI,MAAR,KACE/H,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMC,GAAG,KACPvB,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,iBAAiBsH,IAAKC,IAAMC,IAAI,WAGnDlI,EAAAC,EAAAC,cAACyH,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7BpI,EAAAC,EAAAC,cAACyH,EAAA,EAAOU,SAAR,CAAiB1D,GAAG,oBAClB3E,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAK5H,UAAU,WACbV,EAAAC,EAAAC,cAACoI,EAAA,EAAIC,KAAL,KACIvI,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAASZ,UAAU,cAAc8H,OAAK,EAACjH,GAAG,KACxCvB,EAAAC,EAAAC,cAAA,iCAINF,EAAAC,EAAAC,cAACoI,EAAA,EAAIC,KAAL,KACEvI,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAASZ,UAAU,cAAc8H,OAAK,EAACjH,GAAG,eACxCvB,EAAAC,EAAAC,cAAA,2BAIJF,EAAAC,EAAAC,cAACoI,EAAA,EAAIC,KAAL,KACEvI,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAASZ,UAAU,cAAca,GAAG,eAClCvB,EAAAC,EAAAC,cAAA,2BAIJF,EAAAC,EAAAC,cAACoI,EAAA,EAAIC,KAAL,KACEvI,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAASZ,UAAU,cAAca,GAAG,sBAClCvB,EAAAC,EAAAC,cAAA,8BAIJF,EAAAC,EAAAC,cAACoI,EAAA,EAAIC,KAAL,KACEvI,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAASZ,UAAU,cAAca,GAAG,WAClCvB,EAAAC,EAAAC,cAAA,mCAOVF,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAOD,OAAK,EAACE,KAAK,IAAIC,UAAW5I,IACjCC,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWvI,IACrCJ,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWtI,IACrCL,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAOC,KAAK,qBAAqBC,UAAWrF,IAC5CtD,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAOC,KAAK,qBAAqBC,UAAWnC,IAC5CxG,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAOC,KAAK,mBAAmBC,UAAWnB,YAnDPrH,aCA5ByI,MARf,WACE,OACI5I,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,OACbV,EAAAC,EAAAC,cAAC2I,EAAD,QCIYC,QACW,cAA7BC,OAAOtB,SAASuB,UAEe,UAA7BD,OAAOtB,SAASuB,UAEhBD,OAAOtB,SAASuB,SAASC,MACvB,2DCVNC,IAASC,OACLnJ,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACItB,EAAAC,EAAAC,cAACuI,EAAA,EAAD,KAEQzI,EAAAC,EAAAC,cAACkJ,EAAD,QAIhBC,SAASC,eAAe,SDiHlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrH,KAAK,SAAAsH,GACjCA,EAAaC","file":"static/js/main.2f1dcea7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c822dbb8.png\";","import React, { Component } from 'react';\n\nclass Login extends Component {\n    render() {\n            return(\n                <div>\n                    <p>Componente de Login</p>\n                    \n                    \n                </div>\n            )\n        }\n    }\n\nexport default Login;","import React, { Component } from 'react';\n\nclass ShowOrders extends Component {\n    render() {\n            return(\n                <div>\n                    <p>Componente de Mostrar ordenes</p>\n                    \n                    \n                </div>\n            )\n        }\n    }\n\nexport default ShowOrders;","import React, { Component } from 'react';\n\nclass MakeOrders extends Component {\n    render() {\n            return(\n                <div>\n                    <p>Componente para tomar ordenes</p>\n                    \n                    \n                </div>\n            )\n        }\n    }\n\nexport default MakeOrders;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst TableEmployees = (props) => {\n    var rows = props.arrayEmployees; \n\n    const _renderAllData = () =>{\n       return rows.map((value, index) => (\n            <tr key={index}>\n            <td>{index}</td>\n            <td>{value.Name}</td>\n            <td>{value.TypeEmployee}</td>\n            <td>{value.Email}</td>\n            <td>\n                <Link to ={{ pathname: '/UpdateContainer', userData: value}} > Actualizar </Link>\n            </td>\n            <td>\n                <button onClick ={ () => { props.controlFuncDelete(index, value) }}>Borrar</button>\n            </td>\n            </tr>\n        ))\n    }\n\n    return (\n        <div className=\"mainContent\">\n            <div className=\"container\">\n                <h3>{props.title}</h3>    \n                <table border=\"1\" style={{width: \"100%\"}}>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Nombre</th>\n                            <th>Puesto</th> \n                            <th>Email</th>\n                            <th>Actualizar</th>\n                            <th>Borrar</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {_renderAllData()}\n                    </tbody>\n                </table>\n            </div>    \n        </div>\n    )\n};\n\nexport default TableEmployees;","const URL = 'http://localhost:8080/api/v1'\n\nconst headers = new Headers();\nheaders.append('Content-Type', 'application/json');\n\nconst getAll = () => (\n  fetch(URL+'/employees', {\n    method: 'GET',\n    headers\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('Success fetch GET all Data Method for RESTFull:', data)\n    return data\n  })\n  .catch(error => console.error('Error:', error))\n);\n\nconst addOne = (newEmp) => {\n  fetch(URL+'/employees', {\n    method: 'POST',\n    headers,\n    body : JSON.stringify(newEmp)\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('Success fetch POST Method for RESTFull:', data) \n    return data \n   })\n  .catch(error => console.error('Error:', error))\n};\n\nconst getByID = (idEmp) => (\n  fetch(URL+'/employees/'+idEmp, {\n    method: 'GET',\n    headers\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('Success fetch GET by ID Method for RESTFull:', data)\n    return data\n  })\n  .catch(error => console.error('Error:', error))\n);\n\nconst updateOne = (idEmp, emp) => {\n  fetch(URL+'/employees/'+idEmp, {\n    method: 'PUT',\n    headers,\n    body : JSON.stringify(emp)\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('Success fetch PUT Method for RESTFull::', data)\n    return data\n  })\n  .catch(error => console.error('Error:', error));\n}\n\nconst deleteOne = (idEmp) => {\n  fetch(URL+'/employees/'+idEmp,  {\n    method: 'DELETE',\n    headers\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('Success fetch DELETE Method for RESTFull:', data)\n    return data\n  })\n  .catch(error => console.error('Error:', error));\n};\n\nexport const employeeService = {\n  getAll,\n  getByID,\n  addOne,\n  updateOne,\n  deleteOne\n}\n\n// sericios puede compartir datos entre capas y componentes","import React, { Component, Fragment } from 'react';\nimport TableEmployees from './employees-component';\nimport { Link } from \"react-router-dom\";\n//import { employeeFactory } from '../../domain/employeeFactory'\n//TODO: Aca no supe como mandar del service al factory para utilizar el factory; por eso importe directo el service. Te sobrara tiempo, mejora esto: \n\nimport { employeeService } from '../../services/employeeService'\n\n\nclass EmployeeContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allEmployees: [],\n            title: 'Administración de todos los empleados:',\n        };\n    }\n\n    componentDidMount() {\n        console.log('2. componentDidMount()  ')\n        employeeService.getAll().then( \n            json => { \n                this.setState({ allEmployees : json }) \n            }\n        ) \n    }\n\n    _deleteEmployee = (index, value) => {\n        console.log('Click en: ', index, value);\n        this.state.allEmployees.splice(index, 1);\n        this.setState({allEmployees : this.state.allEmployees })\n        employeeService.deleteOne(value._id);   \n    };\n\n    render(){\n        console.log('1. render() ')\n\n        if (this.state.allEmployees.length > 0) {\n            return(\n                <Fragment>\n                <Link to=\"/RegisterContainer\"> Registrar </Link>\n                    <TableEmployees\n                        title={this.state.title}\n                        arrayEmployees={this.state.allEmployees}\n                        controlFuncDelete={this._deleteEmployee}\n                    />\n                </Fragment>\n            )\n        } else {\n            return(\n                <p>No existen datos para mostrar</p>\n            )\n        }\n        \n    }\n}\nexport default EmployeeContainer;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst RegisterUpdater = (props) => (\n    <div className=\"mainContent\">\n        <div className=\"container\">\n            <h3>{props.defaultData.title}</h3>\n            <div className=\"LoginImage\">\n            <div style={{border: \"5px solid orange\"}}>\n                <label htmlFor=\"nya\">Nombre y Apellido: *</label>\n                <br />\n                <input \n                    className=\"form-control\" id=\"name\" name=\"name\" \n                    type=\"text\" \n                    placeholder = \"Nancy Rodriguez\" \n                    value= {props.defaultData.name} \n                    onChange={props.controlFuncName}\n                    required\n                    />\n                <br />\n                <label htmlFor=\"email\">Email: *</label>\n                <br />\n                <input \n                    className=\"form-control\" id=\"email\" name=\"email\"\n                    type=\"text\" \n                    placeholder = \"nancy@sample.com\" \n                    value={props.defaultData.email}\n                    onChange={props.controlFuncEmail} \n                    required\n                    />\n                <br />\n                <input \n                    className=\"form-control\" id=\"emailcopy\" name=\"emailcopy\"\n                    type=\"text\" \n                    placeholder = \"nancy@sample.com\" \n                    value={props.defaultData.emailcopy}\n                    onChange={props.controlFuncCopyEmail} \n                    required\n                    />\n                <br />\n                <label htmlFor=\"password\">Contraseña:</label>\n                <br/>\n                <input \n                    className=\"form-control\" id=\"pass\" name=\"pass\"\n                    type=\"password\" \n                    value={props.defaultData.pass}\n                    onChange={props.controlFuncPass}\n                    required\n                    />\n                <br />\n                <input \n                    className=\"form-control\" id=\"passcopy\" name=\"passcopy\"\n                    type=\"password\" \n                    value={props.defaultData.passcopy}\n                    onChange={props.controlFuncCopyPass}\n                    required\n                    />\n                <br />\n                <div className=\"form-group\">\n                    <label htmlFor=\"type\">Tipo de Empleado:</label>\n                    <br/>\n                    <select\n                    id=\"typeCombo\"\n                    name=\"typeCombo\"\n                    value={props.defaultData.typeEmployee}\n                    // options={props.defaultData.optionsCombo}\n                    onChange={props.controlFuncTypeEmployee}\n                    className=\"form-select\">\n                    <option value=\"\">{props.defaultData.titleCombo}</option>\n                    {props.defaultData.optionsCombo.map((optionValue, index) => {\n                        return (\n                            <option \n                                key={index} \n                                value={optionValue}>{optionValue}\n                            </option>);\n                    })}\n                    </select>\n                </div>\n                <input className=\"btn\" type=\"submit\" value=\"Enviar\" to=\"/EmployeeContainer\"/>\n                {/* <Link to=\"/EmployeeContainer\" className=\"btn\" type=\"submit\"> Enviar </Link> */}\n                <button className=\"btn btn-link float-left\"\n                        onClick={props.clearForm}>Limpiar Forma</button>\n            </div>\n            </div>\n        </div>\n    </div>\n); \n\nexport default RegisterUpdater;","export class Employee {\n    constructor(typeEmployee, name, email, pass){\n        this.TypeEmployee = typeEmployee;\n        this.Name = name;\n        this.Email = email; \n        this.Pass = pass\n    }\n}\n\n//La definicion para cada variable no es estricta como para el Schema de mongoose porque tu Nancy estas usando js en vez de ts","import {Employee} from '../services/employee'\nimport {employeeService} from '../services/employeeService';\n\nexport const createEmployee = (value) => {\n  let newEmp = new Employee();\n\n  if(value.pass === value.passcopy && \n    value.email === value.emailcopy){\n      newEmp.TypeEmployee = value.typeEmployee;\n      newEmp.Name = (value.name).toUpperCase();\n      newEmp.Pass = value.pass;\n      newEmp.Email = value.email;\n\n      console.log('Send this in a POST request:', newEmp);\n      employeeService.addOne(newEmp)\n  }\n  else{\n    alert('los passwords no son iguales o el email es diferente')\n  }\n}\n\nexport const updateEmployee = (id, value) => { \n  checkMailDuplicate()\n\n  let emp = {}; \n  if(value.pass === value.passcopy && \n    value.email === value.emailcopy){\n      emp.TypeEmployee = value.typeEmployee;\n      emp.Name = (value.name).toUpperCase();\n      emp.Pass = value.pass;\n      emp.Email = value.email;\n\n      console.log('Send this in a PUT request:', emp);\n      employeeService.updateOne(id, emp)\n  }\n  else{\n    alert('los passwords no son iguales o el email es diferente')\n  }\n}\n\nconst checkMailDuplicate = () =>{\n  // employeeService.getAll()\n  // .then( \n  //   json => { arrayData = json\n  //   })\n      \n}\n\nexport const employeeFactory = {\n  createEmployee,\n  updateEmployee\n};","import React, { Component, Fragment } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport RegisterUpdater from './register-component';\nimport { employeeFactory } from '../../domain/employeeFactory'\n\nclass RegisterContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            emailcopy: '',\n            pass: '',\n            passcopy: '',\n            typeEmployee: '',\n            \n            optionsCombo: ['Mesero', 'Cocinero'],\n            titleCombo: 'Selecciona puesto',\n            title: 'Registrar Usuario'\n        };\n    }\n\n    handleFullNameChange = (e) =>{\n        this.setState({ name: e.target.value });\n    }\n\n    handleFullEmailChange = (e) =>{\n        this.setState({ email: e.target.value });\n    }\n\n    handleFullEmailCopyChange = (e) =>{\n        this.setState({ emailcopy: e.target.value });\n    }\n\n    handleFullPassChange = (e) =>{\n        this.setState({ pass: e.target.value });\n    }\n\n    handleFullPassCopyChange = (e) =>{\n        this.setState({ passcopy: e.target.value });\n    }\n\n    handleTypeEmployeeSelect = (e) =>{\n        this.setState({ typeEmployee: e.target.value });\n\t}\n\n    handleClearForm = (e) =>{\n        e.preventDefault();\n        this.setState({\n            name: '',\n            email: '',\n            emailcopy: '',\n            pass: '',\n            passcopy: '',\n            typeEmployee: '',\n        });\n    }\n\n    handleFormSubmit = (e) =>{\n        e.preventDefault();\n\n        const allDataInputs = {\n          name: this.state.name,\n          email: this.state.email,\n          emailcopy: this.state.emailcopy,\n          pass: this.state.pass,\n          passcopy: this.state.passcopy,\n          typeEmployee: this.state.typeEmployee,\n        };\n        employeeFactory.createEmployee(allDataInputs);\n        this.handleClearForm(e);\n    }\n\n    render() {\n        return(\n            <Fragment>\n                <form className=\"form\" onSubmit={this.handleFormSubmit} autoComplete='off' style={{border: \"5px solid red\"}}>\n                    <RegisterUpdater \n                        defaultData= {this.state}\n                        controlFuncName={this.handleFullNameChange}\n                        controlFuncEmail={this.handleFullEmailChange}\n                        controlFuncCopyEmail={this.handleFullEmailCopyChange}\n                        controlFuncPass={this.handleFullPassChange}\n                        controlFuncCopyPass={this.handleFullPassCopyChange}\n                        clearForm= {this.handleClearForm}\n\n                        controlFuncTypeEmployee={this.handleTypeEmployeeSelect}\n                    />\n                </form>\n                <Link to=\"/EmployeeContainer\"> Cancelar </Link>\n            </Fragment>\n        )\n    }\n}\n\n// Register.propTypes = {\n//     controlFuncName: React.PropTypes.func.isRequired\n// };\n          \nexport default RegisterContainer;","import React, { Component, Fragment } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport RegisterUpdater from './register-component';\nimport { employeeFactory } from '../../domain/employeeFactory'\n\nclass UpdateContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            emailcopy: '',\n            pass: '',\n            passcopy: '',\n            typeEmployee: '',\n            \n            optionsCombo: ['Mesero', 'Cocinero'],\n            titleCombo: 'Selecciona puesto',\n            title: 'Actualizar Usuario'\n        };\n    }\n\n    componentDidMount(){\n        //console.log(this.props.location.userData);\n        this.setState({\n            name: this.props.location.userData.Name,\n            email: this.props.location.userData.Email,\n            emailcopy: this.props.location.userData.Email,\n            pass: this.props.location.userData.Pass,\n            passcopy: this.props.location.userData.Pass,\n            typeEmployee: this.props.location.userData.TypeEmployee,\n        })\n    }\n\n    handleFullNameChange = (e) =>{\n        this.setState({ name: e.target.value });\n    }\n\n    handleFullEmailChange = (e) =>{\n        this.setState({ email: e.target.value });\n    }\n\n    handleFullEmailCopyChange = (e) =>{\n        this.setState({ emailcopy: e.target.value });\n    }\n\n    handleFullPassChange = (e) =>{\n        this.setState({ pass: e.target.value });\n    }\n\n    handleFullPassCopyChange = (e) =>{\n        this.setState({ passcopy: e.target.value });\n    }\n\n    handleTypeEmployeeSelect = (e) =>{\n        this.setState({ typeEmployee: e.target.value });\n\t}\n\n    handleClearForm = (e) =>{\n        e.preventDefault();\n        this.setState({\n            name: '',\n            email: '',\n            emailcopy: '',\n            pass: '',\n            passcopy: '',\n            typeEmployee: '',\n        });\n\n       \n    }\n\n    handleFormSubmit = (e) =>{\n        e.preventDefault();\n\n        const allDataInputs = {\n          name: this.state.name,\n          email: this.state.email,\n          emailcopy: this.state.emailcopy,\n          pass: this.state.pass,\n          passcopy: this.state.passcopy,\n          typeEmployee: this.state.typeEmployee,\n        };\n        console.log(allDataInputs)\n        employeeFactory.updateEmployee(this.props.location.userData._id, allDataInputs)\n        this.handleClearForm(e);\n    }\n\n    render() {\n        return(\n            <Fragment>\n                <form className=\"form\" onSubmit={this.handleFormSubmit} autoComplete='off' style={{border: \"5px solid red\"}}>\n                    <RegisterUpdater \n                        defaultData= {this.state}\n                        controlFuncName={this.handleFullNameChange}\n                        controlFuncEmail={this.handleFullEmailChange}\n                        controlFuncCopyEmail={this.handleFullEmailCopyChange}\n                        controlFuncPass={this.handleFullPassChange}\n                        controlFuncCopyPass={this.handleFullPassCopyChange}\n                        clearForm= {this.handleClearForm}\n\n                        controlFuncTypeEmployee={this.handleTypeEmployeeSelect}\n                    />\n                </form>\n                <Link to=\"/EmployeeContainer\"> Cancelar </Link>\n            </Fragment>\n        )\n    }\n}\n\n// Register.propTypes = {\n//     controlFuncName: React.PropTypes.func.isRequired\n// };\n          \nexport default UpdateContainer;","import React, { Component, Fragment } from \"react\";\nimport Logo from '../assets/images/logo.png';\nimport { NavLink, Link, Route } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nimport Login from '../components/Login'\nimport ShowOrders from '../components/ShowOrders';\nimport MakeOrders from '../components/MakeOrders';\nimport EmployeeContainer from '../components/employees/employees-container';\nimport RegisterContainer from '../components/employees/register-container';\nimport UpdateContainer from '../components/employees/updater-container';\n\n\nexport default class NavbarProfile extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Navbar variant=\"dark\" expand=\"lg\" fixed=\"top\">\n          <Navbar.Brand>\n            <Link to=\"/\">\n              <img className=\"App-logo-image\" src={Logo} alt=\"logo\" />\n            </Link>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <Nav.Item>\n                  <NavLink className=\"navMenuLink\" exact to=\"/\">\n                    <h6>Iniciar sesión</h6>\n                  </NavLink>\n              </Nav.Item>\n\n              <Nav.Item>\n                <NavLink className=\"navMenuLink\" exact to=\"/MakeOrders\">\n                  <h6>Tomar orden</h6>\n                </NavLink>\n              </Nav.Item>\n\n              <Nav.Item>\n                <NavLink className=\"navMenuLink\" to=\"/ShowOrders\">\n                  <h6>Ver pedidos</h6>\n                </NavLink>\n              </Nav.Item>\n\n              <Nav.Item>\n                <NavLink className=\"navMenuLink\" to=\"/EmployeeContainer\">\n                  <h6>Administracion</h6>\n                </NavLink>\n              </Nav.Item>\n\n              <Nav.Item>\n                <NavLink className=\"navMenuLink\" to=\"/LogOut\">\n                  <h6>Cerrar sesión</h6>\n                </NavLink>\n              </Nav.Item>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"/ShowOrders\" component={ShowOrders} />\n        <Route path=\"/MakeOrders\" component={MakeOrders} />\n        <Route path=\"/EmployeeContainer\" component={EmployeeContainer} />\n        <Route path=\"/RegisterContainer\" component={RegisterContainer} />\n        <Route path=\"/UpdateContainer\" component={UpdateContainer} />\n\n      </Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\n\nimport NavbarProfile from './components/NavbarProfile';\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <NavbarProfile />\n      </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n//import React, {StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Switch } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <HashRouter>\n        <Switch>\n            {/* <StrictMode> */}\n                <App />\n            {/* </StrictMode> */}\n        </Switch>\n    </HashRouter>, \ndocument.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}